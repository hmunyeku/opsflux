# Generated by Django 5.0.7 on 2025-10-02 21:25

import core.models.attachment
import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="BusinessUnit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "eid",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identifiant unique pour les intégrations externes",
                        unique=True,
                        verbose_name="External ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Créé le"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Modifié le"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Marqué comme supprimé (soft delete)",
                        verbose_name="Supprimé",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Supprimé le"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Données additionnelles au format JSON",
                        verbose_name="Métadonnées",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        help_text="Code unique identifiant l'entité",
                        max_length=50,
                        unique=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=255, verbose_name="Nom"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Description"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Indique si l'entité est active",
                        verbose_name="Actif",
                    ),
                ),
                (
                    "street1",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Adresse ligne 1",
                    ),
                ),
                (
                    "street2",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Adresse ligne 2",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, default="", max_length=100, verbose_name="Ville"
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        verbose_name="État/Région",
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=20,
                        verbose_name="Code postal",
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, default="", max_length=100, verbose_name="Pays"
                    ),
                ),
                (
                    "country_code",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Code pays ISO 3166-1 alpha-2",
                        max_length=2,
                        verbose_name="Code pays (ISO)",
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="Latitude",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="Longitude",
                    ),
                ),
                (
                    "unit_type",
                    models.CharField(
                        choices=[
                            ("headquarters", "Siège social"),
                            ("branch", "Agence"),
                            ("warehouse", "Entrepôt"),
                            ("factory", "Usine"),
                            ("office", "Bureau"),
                            ("department", "Département"),
                            ("other", "Autre"),
                        ],
                        default="branch",
                        max_length=20,
                        verbose_name="Type d'unité",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, default="", max_length=254, verbose_name="Email"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, default="", max_length=20, verbose_name="Téléphone"
                    ),
                ),
                (
                    "is_cost_center",
                    models.BooleanField(
                        default=False,
                        help_text="Cette unité est un centre de coûts",
                        verbose_name="Centre de coûts",
                    ),
                ),
                (
                    "is_profit_center",
                    models.BooleanField(
                        default=False,
                        help_text="Cette unité est un centre de profit",
                        verbose_name="Centre de profit",
                    ),
                ),
                (
                    "cost_center_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=20,
                        verbose_name="Code centre de coûts",
                    ),
                ),
            ],
            options={
                "verbose_name": "Unité opérationnelle",
                "verbose_name_plural": "Unités opérationnelles",
                "ordering": ["company", "name"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "eid",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identifiant unique pour les intégrations externes",
                        unique=True,
                        verbose_name="External ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Créé le"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Modifié le"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Marqué comme supprimé (soft delete)",
                        verbose_name="Supprimé",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Supprimé le"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Données additionnelles au format JSON",
                        verbose_name="Métadonnées",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        help_text="Code unique identifiant l'entité",
                        max_length=50,
                        unique=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=255, verbose_name="Nom"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Description"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Indique si l'entité est active",
                        verbose_name="Actif",
                    ),
                ),
                (
                    "category_type",
                    models.CharField(
                        db_index=True,
                        help_text="Type: product, document, task, etc.",
                        max_length=50,
                        verbose_name="Type de catégorie",
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Nom de l'icône (ex: fa-folder)",
                        max_length=50,
                        verbose_name="Icône",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Code couleur hexadécimal (ex: #FF5733)",
                        max_length=7,
                        verbose_name="Couleur",
                    ),
                ),
                (
                    "sequence",
                    models.PositiveIntegerField(
                        default=10,
                        help_text="Ordre d'affichage (plus petit = plus haut)",
                        verbose_name="Séquence",
                    ),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
            ],
            options={
                "verbose_name": "Catégorie",
                "verbose_name_plural": "Catégories",
                "ordering": ["category_type", "sequence", "name"],
            },
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "eid",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identifiant unique pour les intégrations externes",
                        unique=True,
                        verbose_name="External ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Créé le"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Modifié le"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Marqué comme supprimé (soft delete)",
                        verbose_name="Supprimé",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Supprimé le"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Données additionnelles au format JSON",
                        verbose_name="Métadonnées",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        help_text="Code unique identifiant l'entité",
                        max_length=50,
                        unique=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=255, verbose_name="Nom"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Description"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Indique si l'entité est active",
                        verbose_name="Actif",
                    ),
                ),
                (
                    "street1",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Adresse ligne 1",
                    ),
                ),
                (
                    "street2",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="Adresse ligne 2",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, default="", max_length=100, verbose_name="Ville"
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        verbose_name="État/Région",
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=20,
                        verbose_name="Code postal",
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, default="", max_length=100, verbose_name="Pays"
                    ),
                ),
                (
                    "country_code",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Code pays ISO 3166-1 alpha-2",
                        max_length=2,
                        verbose_name="Code pays (ISO)",
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="Latitude",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="Longitude",
                    ),
                ),
                (
                    "legal_name",
                    models.CharField(
                        help_text="Nom légal complet de la société",
                        max_length=255,
                        verbose_name="Raison sociale",
                    ),
                ),
                (
                    "registration_number",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="SIREN, Company Number, etc.",
                        max_length=50,
                        verbose_name="Numéro d'enregistrement",
                    ),
                ),
                (
                    "tax_id",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=50,
                        verbose_name="Numéro fiscal",
                    ),
                ),
                (
                    "vat_number",
                    models.CharField(
                        blank=True, default="", max_length=50, verbose_name="Numéro TVA"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        default="",
                        max_length=254,
                        verbose_name="Email principal",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, default="", max_length=20, verbose_name="Téléphone"
                    ),
                ),
                (
                    "website",
                    models.URLField(blank=True, default="", verbose_name="Site web"),
                ),
                (
                    "language",
                    models.CharField(
                        default="fr",
                        help_text="Code langue ISO 639-1",
                        max_length=10,
                        verbose_name="Langue",
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="UTC", max_length=50, verbose_name="Fuseau horaire"
                    ),
                ),
                (
                    "fiscal_year_start_month",
                    models.PositiveSmallIntegerField(
                        default=1,
                        help_text="1 pour janvier, 2 pour février, etc.",
                        verbose_name="Mois de début d'exercice",
                    ),
                ),
                (
                    "fiscal_year_start_day",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Jour de début d'exercice"
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="companies/logos/",
                        verbose_name="Logo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Société",
                "verbose_name_plural": "Sociétés",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Currency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "eid",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identifiant unique pour les intégrations externes",
                        unique=True,
                        verbose_name="External ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Créé le"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Modifié le"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Marqué comme supprimé (soft delete)",
                        verbose_name="Supprimé",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Supprimé le"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Données additionnelles au format JSON",
                        verbose_name="Métadonnées",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        help_text="Code devise ISO 4217 (ex: EUR, USD, XAF)",
                        max_length=3,
                        unique=True,
                        verbose_name="Code ISO",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nom")),
                (
                    "symbol",
                    models.CharField(
                        help_text="Symbole de la devise (ex: €, $, FCFA)",
                        max_length=10,
                        verbose_name="Symbole",
                    ),
                ),
                (
                    "decimal_places",
                    models.PositiveSmallIntegerField(
                        default=2,
                        help_text="Nombre de décimales pour l'affichage",
                        verbose_name="Décimales",
                    ),
                ),
                (
                    "rounding",
                    models.DecimalField(
                        decimal_places=6,
                        default=Decimal("0.01"),
                        help_text="Valeur d'arrondi (ex: 0.01 pour centimes)",
                        max_digits=12,
                        verbose_name="Arrondi",
                    ),
                ),
                (
                    "symbol_position",
                    models.CharField(
                        choices=[("before", "Avant"), ("after", "Après")],
                        default="after",
                        max_length=10,
                        verbose_name="Position du symbole",
                    ),
                ),
                (
                    "decimal_separator",
                    models.CharField(
                        default=",", max_length=1, verbose_name="Séparateur décimal"
                    ),
                ),
                (
                    "thousand_separator",
                    models.CharField(
                        default=" ", max_length=1, verbose_name="Séparateur milliers"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True, default=True, verbose_name="Active"
                    ),
                ),
            ],
            options={
                "verbose_name": "Devise",
                "verbose_name_plural": "Devises",
                "ordering": ["code"],
            },
        ),
        migrations.CreateModel(
            name="CurrencyRate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "eid",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identifiant unique pour les intégrations externes",
                        unique=True,
                        verbose_name="External ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Créé le"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Modifié le"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Marqué comme supprimé (soft delete)",
                        verbose_name="Supprimé",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Supprimé le"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Données additionnelles au format JSON",
                        verbose_name="Métadonnées",
                    ),
                ),
                (
                    "rate",
                    models.DecimalField(
                        decimal_places=10,
                        help_text="1 unité de devise source = X unités de devise cible",
                        max_digits=20,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("1E-10"))
                        ],
                        verbose_name="Taux",
                    ),
                ),
                (
                    "effective_date",
                    models.DateField(
                        db_index=True,
                        help_text="Date à partir de laquelle ce taux est applicable",
                        verbose_name="Date d'effet",
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Source du taux (API, Banque, Manuel, etc.)",
                        max_length=100,
                        verbose_name="Source",
                    ),
                ),
                (
                    "is_manual",
                    models.BooleanField(
                        default=False,
                        help_text="Taux saisi manuellement (non automatique)",
                        verbose_name="Taux manuel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Taux de change",
                "verbose_name_plural": "Taux de change",
                "ordering": ["-effective_date", "from_currency", "to_currency"],
            },
        ),
        migrations.CreateModel(
            name="Sequence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "eid",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identifiant unique pour les intégrations externes",
                        unique=True,
                        verbose_name="External ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Créé le"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Modifié le"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Marqué comme supprimé (soft delete)",
                        verbose_name="Supprimé",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Supprimé le"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Données additionnelles au format JSON",
                        verbose_name="Métadonnées",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        help_text="Code unique identifiant l'entité",
                        max_length=50,
                        unique=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=255, verbose_name="Nom"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Description"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Indique si l'entité est active",
                        verbose_name="Actif",
                    ),
                ),
                (
                    "prefix",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Préfixe avant le numéro (ex: INV-)",
                        max_length=20,
                        verbose_name="Préfixe",
                    ),
                ),
                (
                    "suffix",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Suffixe après le numéro (ex: -2024)",
                        max_length=20,
                        verbose_name="Suffixe",
                    ),
                ),
                (
                    "padding",
                    models.PositiveSmallIntegerField(
                        default=5,
                        help_text="Nombre de chiffres (ex: 5 = 00001)",
                        verbose_name="Padding",
                    ),
                ),
                (
                    "current_number",
                    models.PositiveBigIntegerField(
                        default=0,
                        help_text="Dernier numéro généré",
                        verbose_name="Numéro actuel",
                    ),
                ),
                (
                    "increment",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Valeur d'incrémentation",
                        verbose_name="Incrément",
                    ),
                ),
                (
                    "reset_frequency",
                    models.CharField(
                        choices=[
                            ("never", "Jamais"),
                            ("yearly", "Annuelle"),
                            ("monthly", "Mensuelle"),
                            ("daily", "Quotidienne"),
                        ],
                        default="never",
                        max_length=20,
                        verbose_name="Fréquence de réinitialisation",
                    ),
                ),
                (
                    "last_reset_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Dernière réinitialisation"
                    ),
                ),
                (
                    "use_date_variables",
                    models.BooleanField(
                        default=True,
                        help_text="Remplacer {YYYY}, {MM}, {DD} dans préfixe/suffixe",
                        verbose_name="Utiliser variables de date",
                    ),
                ),
            ],
            options={
                "verbose_name": "Séquence",
                "verbose_name_plural": "Séquences",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "eid",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identifiant unique pour les intégrations externes",
                        unique=True,
                        verbose_name="External ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Créé le"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Modifié le"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Marqué comme supprimé (soft delete)",
                        verbose_name="Supprimé",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Supprimé le"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Données additionnelles au format JSON",
                        verbose_name="Métadonnées",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        db_index=True,
                        help_text="Code unique identifiant l'entité",
                        max_length=50,
                        unique=True,
                        verbose_name="Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(db_index=True, max_length=255, verbose_name="Nom"),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Description"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text="Indique si l'entité est active",
                        verbose_name="Actif",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#6C757D",
                        help_text="Code couleur hexadécimal",
                        max_length=7,
                        verbose_name="Couleur",
                    ),
                ),
                (
                    "tag_type",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default="",
                        help_text="Pour grouper les tags (ex: priority, status)",
                        max_length=50,
                        verbose_name="Type de tag",
                    ),
                ),
                (
                    "usage_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Nombre de fois que ce tag est utilisé",
                        verbose_name="Nombre d'utilisations",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tags",
                "ordering": ["-usage_count", "name"],
            },
        ),
        migrations.CreateModel(
            name="Attachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "eid",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Identifiant unique pour les intégrations externes",
                        unique=True,
                        verbose_name="External ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Créé le"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Modifié le"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Marqué comme supprimé (soft delete)",
                        verbose_name="Supprimé",
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Supprimé le"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Données additionnelles au format JSON",
                        verbose_name="Métadonnées",
                    ),
                ),
                (
                    "object_id",
                    models.PositiveIntegerField(verbose_name="ID de l'objet"),
                ),
                (
                    "file",
                    models.FileField(
                        max_length=500,
                        upload_to=core.models.attachment.attachment_upload_path,
                        verbose_name="Fichier",
                    ),
                ),
                (
                    "original_filename",
                    models.CharField(
                        max_length=255, verbose_name="Nom du fichier original"
                    ),
                ),
                (
                    "file_size",
                    models.PositiveBigIntegerField(
                        default=0, verbose_name="Taille du fichier (octets)"
                    ),
                ),
                (
                    "mime_type",
                    models.CharField(
                        blank=True, default="", max_length=100, verbose_name="Type MIME"
                    ),
                ),
                (
                    "file_extension",
                    models.CharField(
                        blank=True, default="", max_length=10, verbose_name="Extension"
                    ),
                ),
                (
                    "file_hash",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default="",
                        max_length=64,
                        verbose_name="Hash SHA256",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="Titre"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default="", verbose_name="Description"
                    ),
                ),
                (
                    "attachment_type",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        default="",
                        help_text="Ex: invoice, contract, photo, document",
                        max_length=50,
                        verbose_name="Type d'attachement",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        default=False,
                        help_text="Accessible sans authentification",
                        verbose_name="Public",
                    ),
                ),
                (
                    "download_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Nombre de téléchargements"
                    ),
                ),
                (
                    "is_scanned",
                    models.BooleanField(default=False, verbose_name="Scanné"),
                ),
                (
                    "scan_result",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=50,
                        verbose_name="Résultat du scan",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                        verbose_name="Type de contenu",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fichier joint",
                "verbose_name_plural": "Fichiers joints",
                "ordering": ["-created_at"],
            },
        ),
    ]
